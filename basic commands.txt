cd ./ <caminho da pasta> => Mudar o local do diretorio atual

ls => listar os arquivos da pasta atual

ls -al => lista arquivos acultos

clear => Limpar terminal

git init => iniciaziar na pasta atual

git status => ver status do git na pasta atual

git add . => add todos os arquivos ao ratreamento 

git add <nome do arquivo> => add este arquivo ao rastreamento

git commit -m "<comentario do commit>" => salvar versão/alteração/estagio dos arquivos rastreados
 
git clone <ssh no projeto> => clona o projeto do github

git push => sobe alteração/versão/estagios para o github

git pull => desço/pego/baixo arquivos que eu não tenho do projeto no github para minha maquina

(Processo de add projeto local no repositorio vazio do github)
	
	git init , git add ., git commit -m""....

	git branch -M main => Renomeia a branch local principal de master (para main para igualar o nome com a branch princial do github)

	git remote add origin <ssh do projeto> => add uma origem remota (que é o projeto no github)

	git push -u main => sobe alteração/versão/estagios  para a branch main (precisa indicar a branch pelo menos na primeira vez)
	(se a branch escrita não existir no repositorio github entçao ela será criada)

git branch => Mostra as branch o git

git branch <nome da nova branch> => Cria uma nova branch

git checkout <nome da branch> => Sai de uma branch para outra

git branch -d <nome da branch> => Deleta a branch

git checkout -b <nome da brach> => Cria a nova branch e vai para ela

git merge <nome da branch com as alterações> => margeia/uni/mistura/mescla com a branch principal (deve ser chamda este comando apartir na chanch principal)

git push -u origin <nome branch> => cria nova bransh no github e empurra/sobe as alterçoes para ela 

git rm <nome do arquivo> => remove/deleta arquivos que ja foram rastrados (git add )

git mv <nome do arquivo> <diretorio/nome do arquivo> => move o arquivo 

git checkout <nome do arquivo> => descarta as alterações dos arquivos não rastreados(git add)

git log <nome do arquivo> => visualizar commits no terminal.
(letra "q" para sair)

git config --global user.name "<seu nome>" => configura seu nome o terminal

git confg --global user.email "<seu email>" => configuta seu email o terminal









